//初始化，读写寄存器等底层函数
u8 ADXL345_Init(void)
{				  
	IIC_Init();							
	while(1)
	{
		delay_ms(10);
		printf("ADXL345 Æ÷¼þID:%d\r\n",ADXL345_RD_Reg(DEVICE_ID));
	}
	if(ADXL345_RD_Reg(DEVICE_ID)==0XE5)	
	{  
		ADXL345_WR_Reg(DATA_FORMAT,0X2B);	
		ADXL345_WR_Reg(BW_RATE,0x0A);		
		ADXL345_WR_Reg(POWER_CTL,0x28);	   
		ADXL345_WR_Reg(INT_ENABLE,0x00);	
	 	ADXL345_WR_Reg(OFSX,0x00);
		ADXL345_WR_Reg(OFSY,0x00);
		ADXL345_WR_Reg(OFSZ,0x00);	
		return 0;
	}			
	return 1;	   								  
}   

void ADXL345_WR_Reg(u8 addr,u8 val) 
{
	IIC_Start();  				 
	IIC_Send_Byte(ADXL_WRITE);     
	IIC_Wait_Ack();	   
    IIC_Send_Byte(addr);   		
	IIC_Wait_Ack(); 	 										  		   
	IIC_Send_Byte(val);     				   
	IIC_Wait_Ack();  		    	   
    IIC_Stop();					   
}

u8 ADXL345_RD_Reg(u8 addr) 		
{
	u8 temp=0;	    	 
	IIC_Start();  				 
	IIC_Send_Byte(ADXL_WRITE);	 
	temp=IIC_Wait_Ack();	  

    IIC_Send_Byte(addr);   		
	temp=IIC_Wait_Ack(); 	 										  		   
	IIC_Start();  	 	   		
	IIC_Send_Byte(ADXL_READ);		 
	temp=IIC_Wait_Ack();	   
    temp=IIC_Read_Byte(0);		    	   
    IIC_Stop();				    
	return temp;		
}  

void ADXL345_RD_Avval(short *x,short *y,short *z)
{
	short tx=0,ty=0,tz=0;	   
	u8 i;  
	for(i=0;i<10;i++)
	{
		ADXL345_RD_XYZ(x,y,z);
		delay_ms(10);
		tx+=(short)*x;
		ty+=(short)*y;
		tz+=(short)*z;	   
	}
	*x=tx/10;
	*y=ty/10;
	*z=tz/10;
} 
//校准函数，上层处理函数
void ADXL345_AUTO_Adjust(char *xval,char *yval,char *zval)
{
	short tx,ty,tz;
	u8 i;
	short offx=0,offy=0,offz=0;
	ADXL345_WR_Reg(POWER_CTL,0x00);	   
	delay_ms(100);
	ADXL345_WR_Reg(DATA_FORMAT,0X2B);
	ADXL345_WR_Reg(BW_RATE,0x0A);		
	ADXL345_WR_Reg(POWER_CTL,0x28);	
	ADXL345_WR_Reg(INT_ENABLE,0x00);

	ADXL345_WR_Reg(OFSX,0x00);
	ADXL345_WR_Reg(OFSY,0x00);
	ADXL345_WR_Reg(OFSZ,0x00);
	delay_ms(12);
	for(i=0;i<10;i++)
	{
		ADXL345_RD_Avval(&tx,&ty,&tz);
		offx+=tx;
		offy+=ty;
		offz+=tz;
	}	 		
	offx/=10;
	offy/=10;
	offz/=10;
	*xval=-offx/4;
	*yval=-offy/4;
	*zval=-(offz-256)/4;	  
 	ADXL345_WR_Reg(OFSX,*xval);
	ADXL345_WR_Reg(OFSY,*yval);
	ADXL345_WR_Reg(OFSZ,*zval);	
} 

void ADXL345_RD_XYZ(short *x,short *y,short *z)
{
	u8 buf[6];
	u8 i;
	IIC_Start();  				 
	IIC_Send_Byte(ADXL_WRITE);	
	IIC_Wait_Ack();	   
    IIC_Send_Byte(0x32);   	
	IIC_Wait_Ack(); 	 										  		   
 
 	IIC_Start();  	 	   		
	IIC_Send_Byte(ADXL_READ);
	IIC_Wait_Ack();
	for(i=0;i<6;i++)
	{
		if(i==5)buf[i]=IIC_Read_Byte(0);
		else buf[i]=IIC_Read_Byte(1);	
 	}	        	   
    IIC_Stop();				
	*x=(short)(((u16)buf[1]<<8)+buf[0]); 	    
	*y=(short)(((u16)buf[3]<<8)+buf[2]); 	    
	*z=(short)(((u16)buf[5]<<8)+buf[4]); 	   
}
//平均值滤波函数
void ADXL345_Read_Average(short *x,short *y,short *z,u8 times)
{
	u8 i;
	short tx,ty,tz;
	*x=0;
	*y=0;
	*z=0;
	if(times)
	{
		for(i=0;i<times;i++)
		{
			ADXL345_RD_XYZ(&tx,&ty,&tz);
			*x+=tx;
			*y+=ty;
			*z+=tz;
			delay_ms(5);
		}
		*x/=times;
		*y/=times;
		*z/=times;
	}
}
//加速度补偿角度函数
short ADXL345_Get_Angle(float x,float y,float z,u8 dir)
{
	float temp;
 	float res=0;
	switch(dir)
	{
		case 0:
 			temp=sqrt((x*x+y*y))/z;
 			res=atan(temp);
 			break;
		case 1:
 			temp=x/sqrt((y*y+z*z));
 			res=atan(temp);
 			break;
 		case 2:
 			temp=y/sqrt((x*x+z*z));
 			res=atan(temp);
 			break;
 	}
	return res*1800/3.14;//转换为弧度制
}
